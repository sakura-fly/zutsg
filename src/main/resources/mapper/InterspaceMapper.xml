<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zutsg.dao.InterspaceMapper">
  <resultMap id="BaseResultMap" type="com.zutsg.pojo.Interspace">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="title" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="image" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="cotent" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="address" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="topNum" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="userId" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="createTime" jdbcType="DATE" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, title, image, cotent, address, topNum,userId
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from interspace
    where id = #{id,jdbcType=INTEGER}
  </select>

  <select id="selectByIntersapce" parameterType="com.zutsg.pojo.Interspace" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from interspace where 1=1
    <if test="id != null">
      and id=#{id,jdbcType=INTEGER}
    </if>
    <if test="title != null">
      and title=#{title,jdbcType=VARCHAR}
    </if>
    <if test="image != null">
      and  image=#{image,jdbcType=VARCHAR}
    </if>
    <if test="content != null">
      and  content=#{content,jdbcType=VARCHAR}
    </if>
    <if test="address != null">
      and  address=#{address,jdbcType=VARCHAR}
    </if>
    <if test="image != null">
      and  image=#{image,jdbcType=VARCHAR}
    </if>
    <if test="topNum != null">
      and topNum=#{topNum,jdbcType=INTEGER}
    </if>
    <if test="userId != null">
      and userId=#{userId,jdbcType=INTEGER}
    </if>
  </select>
  <select id="selectByIntersapcePage" parameterType="com.zutsg.pojo.Interspace" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from interspace where 1=1
    <if test="id != null">
      and id=#{id,jdbcType=INTEGER}
    </if>
    <if test="title != null">
      and title=#{title,jdbcType=VARCHAR}
    </if>
    <if test="image != null">
      and  image=#{image,jdbcType=VARCHAR}
    </if>
    <if test="content != null">
      and  content=#{content,jdbcType=VARCHAR}
    </if>
    <if test="address != null">
      and  address=#{address,jdbcType=VARCHAR}
    </if>
    <if test="image != null">
      and  image=#{image,jdbcType=VARCHAR}
    </if>
    <if test="topNum != null">
      and topNum=#{topNum,jdbcType=INTEGER}
    </if>
     <if test="userId != null">
      and userId=#{userId,jdbcType=INTEGER}
    </if>
    limit ${pageBean.page},${pageBean.pageSize}
  </select>




  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from interspace
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.zutsg.pojo.Interspace">
    insert into interspace (id, title, image, 
      cotent, address, topNum,userId
      )
    values (#{id,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, #{image,jdbcType=VARCHAR}, 
      #{cotent,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR}, #{topNum,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zutsg.pojo.Interspace">
    insert into interspace
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="title != null">
        title,
      </if>
      <if test="image != null">
        image,
      </if>
      <if test="cotent != null">
        cotent,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="topNum != null">
        topNum,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="createTime != null">
       createTime
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="title != null">
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        #{image,jdbcType=VARCHAR},
      </if>
      <if test="cotent != null">
        #{cotent,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="topNum != null">
        #{topNum,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.zutsg.pojo.Interspace">
    update interspace
    <set>
      <if test="title != null">
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="image != null">
        image = #{image,jdbcType=VARCHAR},
      </if>
      <if test="cotent != null">
        cotent = #{cotent,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="topNum != null">
        topNum = #{topNum,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        topNum = #{userId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zutsg.pojo.Interspace">
    update interspace
    set title = #{title,jdbcType=VARCHAR},
      image = #{image,jdbcType=VARCHAR},
      cotent = #{cotent,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      topNum = #{topNum,jdbcType=INTEGER},
       userId = #{userId,jdbcType=INTEGER},
     createTime= #{createTime,jdbcType=INTEGER},
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>